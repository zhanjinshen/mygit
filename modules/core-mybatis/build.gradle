apply plugin: 'flyway'
apply plugin: "jacoco"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.flywaydb:flyway-gradle-plugin:3.0"
        classpath 'mysql:mysql-connector-java:5.1.36'
    }
}

ext {
    myBatisVersion = '3.2.7'
    myBatisGuiceVersion = '3.6'
    aliyunVersion = '2.2.1'
    jodaMoneyVersion = '0.10.0'
    guiceBridgeVersion = "2.3.0"
}

dependencies {
    compile "com.thoughtworks.midas:session:1.0.0"
    compile 'mysql:mysql-connector-java:5.1.36'
    compile "com.aliyun.oss:aliyun-sdk-oss:$aliyunVersion"

    compile "org.mybatis:mybatis:$myBatisVersion"
    compile "org.mybatis:mybatis-guice:$myBatisGuiceVersion"

    compile "org.joda:joda-money:$jodaMoneyVersion"

    compile "com.google.inject.extensions:guice-multibindings:$guiceVersion"
    compile "com.google.inject.extensions:guice-servlet:$guiceVersion"
    compile "org.glassfish.hk2:guice-bridge:$guiceBridgeVersion"
    compile "org.glassfish.jersey.core:jersey-server:$jerseyVersion"
    compile "org.glassfish.jersey.core:jersey-client:$jerseyVersion"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
    compile "org.glassfish.jersey.containers:jersey-container-grizzly2-http:$jerseyVersion"
    compile "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion"
    compile "org.glassfish.grizzly:grizzly-http-servlet:2.3.15"
    //compile "net.sf.jmimemagic:jmimemagic:0.1.4"
    compile "com.jcraft:jsch:0.1.53"

    compile project(':modules:core')

    testCompile "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:$jerseyVersion"
}

task uberjar(type: Jar, dependsOn: jar) {
    dependsOn classes
    baseName = "fms"
    version = ""
    classifier = "standalone"

    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)

    from configurations.runtime.asFileTree.files.collect { zipTree(it) }

    exclude("META-INF/*.SF")
    exclude("META-INF/*.DSA")
    exclude("META-INF/*.RSA")
    exclude("META-INF/*.RSA")
    exclude("META-INF/*.RSA")
    exclude("mybatis.properties")
    exclude("error.properties")
    exclude("fms.properties")
    exclude("log4j.properties")
    exclude("redis.properties")
    exclude("private-rsa.der")
    exclude("public-rsa.der")
    exclude("fms_keystore")

    manifest {
        attributes 'Main-Class': "com.thoughtworks.fms.core.mybatis.app.Server"
    }
}

def environment = System.getProperty("env") ?: "dev"
def properties = new Properties()
properties.load(project.file("src/test/$environment/mybatis.properties").newReader())

sourceSets {
    test {
        resources {
            srcDirs "src/test/$environment", "src/test/resources"
        }
    }
}

flyway {
    driver = properties.getProperty("db_driver")
    url = properties.getProperty("db_url")
    user = properties.getProperty("db_user")
    password = properties.getProperty("db_password")
    table = 'fms_schema_version'
    locations = ["filesystem:${projectDir}/src/main/resources/db/migration/mysql"]
    sqlMigrationPrefix = 'MySQL-'
}

task startServer(type: JavaExec) {
    main = "com.thoughtworks.fms.core.mybatis.app.Server"
    classpath = sourceSets.main.runtimeClasspath
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'